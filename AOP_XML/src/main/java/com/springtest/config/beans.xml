<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd">
	<bean id="xmlFirstBean" class="com.springtest.beans.FirstBean"></bean>
	<!-- Advisor 클래스 등록 -->
	<bean id="advisor" class="com.springtest.advisor.AdvisorClass"></bean>
	<!-- Aop 설정 -->
	<aop:config>
		<aop:aspect ref="advisor">
			<!-- pointcut 설정 -->
			<aop:pointcut expression="execution(* com.springtest.beans.*Bean.displayHello(..));" id="advisorPoint"/>
			<!-- advisorPoint(pointcut-ref 메소드) 호출 전 시행  -->
			<aop:before method="advBefore" pointcut-ref="advisorPoint"/>
			<!-- advisorPoint(pointcut-ref 메소드) 호출 후 시행  -->
			<aop:after method="advAfter" pointcut-ref="advisorPoint"/>
			<!-- aop around 설정 -->
			<aop:around method="aroundMethod" pointcut-ref="advisorPoint"/>
			<!-- afterReturning 메소드,  메소드 정상 호출 후 시행-->
			<aop:after-returning method="advAfterReturn" pointcut-ref="advisorPoint"/>
			<!--예외처리 메소드, 에러 발생시-->
			<aop:after-throwing method="throwsMethod" pointcut-ref="advisorPoint"/>
		</aop:aspect>
	</aop:config>
</beans>